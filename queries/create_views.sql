-- Представление ежедневных продаж
CREATE VIEW IF NOT EXISTS Ежедневные_Продажи AS
SELECT 
    DATE(П.Дата) AS Дата_Продажи,                     -- Дата продажи
    SUM(Д.Сумма) AS Общая_Выручка,                   -- Общая выручка
    COUNT(DISTINCT П.Номер_Чека) AS Количество_Чеков -- Количество чеков
FROM Продажи П
JOIN Детали_Продаж Д ON П.ID_Продажи = Д.ID_Продажи
GROUP BY DATE(П.Дата)
ORDER BY Дата_Продажи;

-- Представление продаж по дням недели с названиями дней
DROP VIEW IF EXISTS Продажи_По_Дням_Недели;

CREATE VIEW Продажи_По_Дням_Недели AS
SELECT 
    CASE strftime('%w', П.Дата)                       -- Используйте корректную колонку, например, П.Дата
        WHEN '0' THEN 'Воскресенье'
        WHEN '1' THEN 'Понедельник'
        WHEN '2' THEN 'Вторник'
        WHEN '3' THEN 'Среда'
        WHEN '4' THEN 'Четверг'
        WHEN '5' THEN 'Пятница'
        WHEN '6' THEN 'Суббота'
    END AS День_Недели,                              -- Название дня недели
    SUM(Д.Сумма) AS Общая_Выручка                   -- Общая выручка
FROM Продажи П
JOIN Детали_Продаж Д ON П.ID_Продажи = Д.ID_Продажи
GROUP BY День_Недели
ORDER BY 
    CASE День_Недели
        WHEN 'Понедельник' THEN 1
        WHEN 'Вторник' THEN 2
        WHEN 'Среда' THEN 3
        WHEN 'Четверг' THEN 4
        WHEN 'Пятница' THEN 5
        WHEN 'Суббота' THEN 6
        WHEN 'Воскресенье' THEN 7
    END;

-- Представление топовых товаров
CREATE VIEW IF NOT EXISTS Топовые_Товары AS
SELECT 
    Т.Название AS Название_Товара, 
    SUM(Д.Количество) AS Общее_Количество, 
    SUM(Д.Сумма) AS Общая_Выручка 
FROM Товары Т
JOIN Детали_Продаж Д ON Т.ID_Товара = Д.ID_Товара
GROUP BY Т.Название
ORDER BY Общее_Количество DESC;

-- Представление товаров с низкими продажами
CREATE VIEW IF NOT EXISTS Товары_С_Низкими_Продажами AS
SELECT 
    Т.Название AS Название_Товара,
    strftime('%Y-%W', П.Дата) AS Год_Неделя,        -- Год и неделя
    SUM(Д.Количество) AS Всего_Продано
FROM Товары Т
JOIN Детали_Продаж Д ON Т.ID_Товара = Д.ID_Товара
JOIN Продажи П ON П.ID_Продажи = Д.ID_Продажи
GROUP BY Название_Товара, Год_Неделя
HAVING Всего_Продано < 10
ORDER BY Год_Неделя, Всего_Продано ASC;


-- Представление анализа скидок по месяцам
CREATE VIEW IF NOT EXISTS Анализ_Скидок_По_Месяцам AS
SELECT 
    strftime('%Y-%m', П.Дата) AS Месяц,             -- Месяц
    Д.Скидка,                                       -- Скидка
    COUNT(*) AS Количество_Продаж,                  -- Количество продаж
    SUM(Д.Сумма) AS Общая_Выручка                   -- Общая выручка
FROM Детали_Продаж Д
JOIN Продажи П ON П.ID_Продажи = Д.ID_Продажи
GROUP BY Месяц, Д.Скидка
ORDER BY Месяц, Общая_Выручка DESC;


-- Представление производительности кассиров
DROP VIEW IF EXISTS Производительность_Кассиров;

CREATE VIEW Производительность_Кассиров AS
SELECT 
    К.Имя AS Имя_Кассира,
    COUNT(П.Номер_Чека) AS Количество_Чеков,
    SUM(Д.Сумма) AS Сумма_Продаж
FROM Кассиры К
JOIN Продажи П ON К.ID_Кассира = П.ID_Кассира
JOIN Детали_Продаж Д ON П.ID_Продажи = Д.ID_Продажи
GROUP BY К.Имя;


-- Представление производительности кассиров по времени
CREATE VIEW IF NOT EXISTS Производительность_Кассиров_По_Времени AS
SELECT 
    К.Имя AS Имя_Кассира, 
    strftime('%H', Время) AS Час, 
    SUM(Д.Сумма) AS Общая_Выручка 
FROM Кассиры К
JOIN Продажи П ON К.ID_Кассира = П.ID_Кассира
JOIN Детали_Продаж Д ON П.ID_Продажи = Д.ID_Продажи
GROUP BY К.Имя, Час
ORDER BY К.Имя, Общая_Выручка DESC;

DROP VIEW IF EXISTS Тренды_Выручки_По_Месяцам;

CREATE VIEW Тренды_Выручки_По_Месяцам AS
SELECT 
    strftime('%Y-%m', П.Дата) AS Месяц,               -- Преобразование даты в ГГГГ-ММ
    SUM(Д.Сумма) AS Общая_Выручка,                    -- Общая выручка
    SUM(Д.Сумма * (Д.Скидка / 100)) AS Сумма_Скидок   -- Общая сумма скидок
FROM Продажи П
JOIN Детали_Продаж Д ON П.ID_Продажи = Д.ID_Продажи
GROUP BY Месяц
ORDER BY Месяц;
